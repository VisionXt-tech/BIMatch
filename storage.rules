
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Default deny all reads and writes
    // match /{allPaths=**} {
    //   allow read, write: if false;
    // }
    
    // Rule for Profile Images
    // Path: /profileImages/{userId}/{fileName}
    match /profileImages/{userId}/{fileName} {
      // READ: Anyone can view profile images
      allow read: if true;
      
      // WRITE: Only the authenticated user can upload/update/delete their own profile image
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rule for Company Logos
    // Path: /companyLogos/{companyId}/{fileName}
    match /companyLogos/{companyId}/{fileName} {
       // READ: Anyone can view company logos
       allow read: if true;
       
       // WRITE: Only the authenticated company user can upload/update/delete their own logo
       allow write: if request.auth != null && request.auth.uid == companyId;
    }

    // Rule for Professional Certifications (PDFs)
    // Path: /professionalCertifications/{certType}/{userId}/{fileName}
    // Example: /professionalCertifications/albo/USER_ID_123/albo_cert.pdf
    match /professionalCertifications/{certType}/{userId}/{fileName} {
      // READ: Only the user themselves, an admin, or a company they applied to can view certifications.
      // This is complex for storage rules. For simplicity here, we allow only the user to read.
      // Access for companies should be handled via secure, expiring download URLs generated by the backend if needed.
      allow read: if request.auth != null && request.auth.uid == userId;

      // WRITE: Only the user can upload their own certifications.
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
