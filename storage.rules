rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to validate image types
    function isValidImageType(contentType) {
      return contentType.matches('image/(jpeg|jpg|png|webp)');
    }
    
    // Helper function to validate document types
    function isValidDocumentType(contentType) {
      return contentType == 'application/pdf';
    }
    // User files - each user can only access their own files
    match /users/{userId}/{allPaths=**} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId
        && request.resource.size < 5 * 1024 * 1024 // 5MB limit
        && (isValidImageType(request.resource.contentType) || 
            isValidDocumentType(request.resource.contentType));
    }
    
    // Company logos - require authentication for access
    match /companies/{companyId}/logo {
      allow read: if request.auth != null; // Require authentication
      allow write: if request.auth != null && request.auth.uid == companyId
        && request.resource.size < 2 * 1024 * 1024 // 2MB limit
        && isValidImageType(request.resource.contentType);
    }
    
    // Company logos alternative path - require authentication
    match /companyLogos/{companyId}/{allPaths=**} {
      allow read: if request.auth != null; // Require authentication
      allow write: if request.auth != null && request.auth.uid == companyId
        && request.resource.size < 2 * 1024 * 1024 // Consistent 2MB limit
        && isValidImageType(request.resource.contentType);
    }
  }
}